#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void factorize(long n) {
    // Start searching for factors from 2 up to the square root of n
    for (long i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            long j = n / i; // Calculate the second factor
            printf("%ld=%ld*%ld\n", n, j, i);
            return; // Return after finding the first valid factorization
        }
    }
    // If no factors found, we can report the number itself
    // This will happen for prime numbers, but according to the prompt
    // all numbers are valid natural numbers greater than 1.
    // Optionally, you could print this case if needed.
    printf("%ld=%ld*1\n", n, n);
}

int main(int argc, char *argv[]) {
    // Check if the correct number of arguments is provided
    if (argc != 2) {
        fprintf(stderr, "Usage: %s <file>\n", argv[0]);
        return 1;
    }

    // Open the specified file for reading
    FILE *file = fopen(argv[1], "r");
    if (file == NULL) {
        perror("Error opening file");
        return 1;
    }

    long number;
    // Read numbers from the file one by one
    while (fscanf(file, "%ld", &number) == 1) {
        factorize(number); // Call the factorization function
    }

    // Close the file after processing
    fclose(file);
    return 0;
}
